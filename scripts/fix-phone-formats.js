// Script para corregir el formato de tel√©fono en la base de datos
// Ejecutar este script una sola vez para corregir los tel√©fonos existentes

import mongoose from 'mongoose';
import models from './api/models/index.js';

async function fixPhoneFormats() {
    try {
        // Conectar a MongoDB
        await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/neocourse');
        console.log('‚úÖ Conectado a MongoDB');

        // Buscar usuarios con tel√©fonos que empiecen con '+'
        const usersWithPlusPhone = await models.User.find({
            phone: { $regex: /^\+/ }
        });

        console.log(`üì± Encontrados ${usersWithPlusPhone.length} usuarios con formato incorrecto de tel√©fono`);

        // Corregir cada usuario
        for (const user of usersWithPlusPhone) {
            const oldPhone = user.phone;
            const newPhone = oldPhone.replace('+', ''); // Quitar el '+'
            
            await models.User.findByIdAndUpdate(user._id, { phone: newPhone });
            console.log(`‚úÖ Usuario ${user.email}: ${oldPhone} ‚Üí ${newPhone}`);
        }

        console.log('üéâ Todos los tel√©fonos han sido corregidos');
        
        // Verificar el usuario admin espec√≠fico
        const adminUser = await models.User.findById('68f3f9930ce104414ca4baa3');
        if (adminUser) {
            console.log(`üë§ Usuario admin actualizado:`);
            console.log(`   Email: ${adminUser.email}`);
            console.log(`   Tel√©fono: ${adminUser.phone}`);
            console.log(`   Verificado: ${adminUser.isVerified}`);
        }

    } catch (error) {
        console.error('‚ùå Error:', error);
    } finally {
        await mongoose.disconnect();
        console.log('üîå Desconectado de MongoDB');
    }
}

// Ejecutar solo si se llama directamente
if (import.meta.url === `file://${process.argv[1]}`) {
    fixPhoneFormats();
}

export default fixPhoneFormats;
